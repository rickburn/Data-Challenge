[build-system]
requires = ["setuptools>=65.0", "wheel"]
build-backend = "setuptools.build_meta"

[project]
name = "lending-club-prediction"
version = "0.1.0"
description = "Machine learning pipeline for Lending Club loan default risk prediction"
readme = "README.md"
license = {text = "MIT"}
authors = [
    {name = "Your Name", email = "your.email@example.com"},
]
keywords = ["machine-learning", "finance", "risk-prediction", "lending"]
classifiers = [
    "Development Status :: 3 - Alpha",
    "Intended Audience :: Financial and Insurance Industry",
    "License :: OSI Approved :: MIT License",
    "Operating System :: OS Independent",
    "Programming Language :: Python :: 3",
    "Programming Language :: Python :: 3.8",
    "Programming Language :: Python :: 3.9",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Topic :: Office/Business :: Financial :: Investment",
    "Topic :: Scientific/Engineering :: Artificial Intelligence",
]
requires-python = ">=3.8"

# Core dependencies
dependencies = [
    "pandas>=1.5.0,<2.1.0",
    "numpy>=1.21.0,<1.25.0",
    "scikit-learn>=1.2.0,<1.4.0",
    "pydantic>=1.10.0,<2.1.0",
    "matplotlib>=3.5.0,<3.8.0",
    "seaborn>=0.11.0,<0.13.0",
    "joblib>=1.2.0,<1.4.0",
    "openpyxl>=3.0.0,<3.2.0",  # For reading Excel data dictionary
]

# Optional dependencies
[project.optional-dependencies]
dev = [
    "pytest>=7.0.0,<8.0.0",
    "pytest-cov>=4.0.0,<5.0.0",
    "pytest-mock>=3.10.0,<4.0.0",
    "pytest-timeout>=2.1.0,<3.0.0",
    "black>=23.0.0,<24.0.0",
    "isort>=5.12.0,<6.0.0",
    "flake8>=6.0.0,<7.0.0",
    "mypy>=1.0.0,<1.6.0",
    "pre-commit>=3.0.0,<4.0.0",
    "bandit>=1.7.0,<2.0.0",
]

jupyter = [
    "jupyter>=1.0.0,<2.0.0",
    "jupyterlab>=3.5.0,<4.1.0",
    "ipywidgets>=8.0.0,<9.0.0",
]

viz = [
    "plotly>=5.12.0,<6.0.0",
    "bokeh>=3.0.0,<3.3.0",
]

all = [
    "lending-club-prediction[dev,jupyter,viz]"
]

[project.urls]
Homepage = "https://github.com/yourusername/LHAI-Data-Challenge"
Documentation = "https://github.com/yourusername/LHAI-Data-Challenge/blob/main/README.md"
Repository = "https://github.com/yourusername/LHAI-Data-Challenge"
"Bug Tracker" = "https://github.com/yourusername/LHAI-Data-Challenge/issues"

[project.scripts]
lending-club-train = "lending_club.cli:train_model"
lending-club-predict = "lending_club.cli:make_predictions"
lending-club-backtest = "lending_club.cli:run_backtest"

# Setuptools configuration
[tool.setuptools]
package-dir = {"" = "src"}

[tool.setuptools.packages.find]
where = ["src"]

[tool.setuptools.package-data]
lending_club = ["py.typed"]

# Black configuration
[tool.black]
line-length = 88
target-version = ['py38', 'py39', 'py310', 'py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  # Directories
  \.eggs
  | \.git
  | \.hg
  | \.mypy_cache
  | \.tox
  | \.venv
  | venv
  | _build
  | buck-out
  | build
  | dist
)/
'''

# isort configuration
[tool.isort]
profile = "black"
multi_line_output = 3
line_length = 88
known_first_party = ["lending_club"]
known_third_party = ["pandas", "numpy", "sklearn", "matplotlib", "seaborn", "pydantic"]
sections = ["FUTURE", "STDLIB", "THIRDPARTY", "FIRSTPARTY", "LOCALFOLDER"]

# MyPy configuration
[tool.mypy]
python_version = "3.8"
warn_return_any = true
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_unreachable = true
strict_equality = true

[[tool.mypy.overrides]]
module = [
    "matplotlib.*",
    "seaborn.*",
    "sklearn.*",
    "joblib.*",
    "openpyxl.*",
]
ignore_missing_imports = true

# pytest configuration
[tool.pytest.ini_options]
testpaths = ["tests"]
python_files = ["test_*.py"]
python_classes = ["Test*"]
python_functions = ["test_*"]
addopts = [
    "--verbose",
    "--tb=short",
    "--strict-markers",
    "--disable-warnings",
    "--color=yes",
    "-ra",
]
markers = [
    "unit: Unit tests for individual components",
    "integration: Integration tests for complete workflows", 
    "slow: Tests that take a long time to run",
    "data_dependent: Tests that require real data files",
]
filterwarnings = [
    "ignore::UserWarning",
    "ignore::DeprecationWarning",
]
minversion = "6.0"
timeout = 300

# Coverage configuration
[tool.coverage.run]
source = ["src/lending_club"]
omit = [
    "*/tests/*",
    "*/test_*.py",
    "*/__init__.py",
]

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "def __repr__",
    "if self.debug:",
    "if settings.DEBUG",
    "raise AssertionError",
    "raise NotImplementedError",
    "if 0:",
    "if __name__ == .__main__.:",
    "pass",
]
show_missing = true
precision = 2

[tool.coverage.html]
directory = "htmlcov"

# Bandit security linting
[tool.bandit]
exclude_dirs = ["tests", "build", "dist"]
skips = ["B101", "B601"]  # Skip assert_used and shell_injection for tests
